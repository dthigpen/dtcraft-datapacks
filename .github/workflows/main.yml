# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # clone dependencies
      - name: Clone minecraft-data
        uses: actions/checkout@v2
        with:
          repository: PrismarineJS/minecraft-data
          
      - name: Clone minecraft-assets
        uses: actions/checkout@v2
        with:
          repository: InventivetalentDev/minecraft-assets
          ref: "refs/heads/1.18.1"
        
      # Get dependency datapacks
      - uses: robinraju/release-downloader@v1.3
        with:
          repository: "rx-modules/PlayerDB"
          latest: true
          zipBall: true
          out-file-path: "libraries"

      - name: Unzip library datapacks
        run: |
          find libraries -name '*.zip' -exec bash -c 'file={}; unzip $file -d ${file%.zip}' \;
          echo Unzipped library datapacks
          
      - name: Clone datapack-utils
        uses: actions/checkout@v2
        with:
          repository: dthigpen/datapack-utils
      
      - name: Clone dpbuild
        uses: actions/checkout@v2
        with:
          repository: dthigpen/dpbuild
      
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: ls

      - name: Run dpbuild in release mode for all datapacks
        run: |
          echo Mock dpbuild running..
